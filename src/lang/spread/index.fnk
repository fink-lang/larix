{add_operator} = import '@fink/prattler/symbols'
{next_is, curr_loc} = import '@fink/prattler'

{prefix} = import '../symbols'
{single_expression} = import '../block/expr'


spread = fn op, type:
  {
    ...prefix op

    nud: fn lbp: fn ctx:
      {start} = curr_loc ctx

      [right, next_ctx] = match ctx:
        next_is ?, ',':
          [{}, ctx]
        else:
          [expr, next_ctx] = single_expression ctx, lbp
          [{right: expr}, next_ctx]

      {end} = curr_loc next_ctx

      [{type, op, ...right, loc: {start, end}}, next_ctx]
  }


add_spread_operator = fn ctx:
  pipe ctx:
    add_operator spread '...', 'spread'
