// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`dict parses 1`] = `
rec dict (1:0-7:0):
  rec:kv (2:2-2:5)
    ident (2:2-2:5) foo
    ident (2:2-2:5) foo
  rec:kv (4:2-4:15)
    # prop comment
    group (4:2-4:10)
      arithm + (4:3-4:9)
        ident (4:3-4:6) bar
        ident (4:7-4:9) ni
    number (4:12-4:15) 123
  rec:kv (5:2-5:6)
    ident (5:2-5:6) spam
    ident (5:2-5:6) spam
  # trailing comment
`;

exports[`object {...} - parsing failures errors when encountering bad end of prop 1`] = `
module (1:0-1:4)
  rec (1:0-1:4)
    rec:kv (1:1-1:4)
      ident (1:1-1:4) foo
      ident (1:1-1:4) foo

error:
test.fnk:1:4
1| {foo) bar}
       ^

Expected ',' or indented new line or '}'.



`;

exports[`object {...} - parsing failures errors when encountering bad key 1`] = `
module (1:0-1:1)
  rec (1:0-1:1)
    ::error::

error:
test.fnk:1:1
1| {2*3: bar}
    ^

Expected prop-key but found '2'.



`;

exports[`object {...} - parsing failures errors when encountering bad key 2`] = `
module (1:0-1:1)
  rec (1:0-1:1)
    ::error::

error:
test.fnk:1:1
1| {+foo}
    ^

Expected prop-key but found '+'.



`;

exports[`object {...} - parsing failures errors when encountering bad key 3`] = `
module (1:0-1:1)
  rec (1:0-1:1)
    ::error::

error:
test.fnk:1:1
1| {-foo}
    ^

Expected prop-key but found '-'.



`;

exports[`object {...} - parsing failures errors when encountering bad key 4`] = `
module (1:0-1:1)
  rec (1:0-1:1)
    ::error::

error:
test.fnk:1:1
1| {*foo}
    ^

Expected prop-key but found '*'.



`;

exports[`object {...} - parsing failures errors when encountering bad key 5`] = `
module (1:0-1:1)
  rec (1:0-1:1)
    ::error::

error:
test.fnk:1:1
1| {/foo}
    ^

Expected prop-key but found '/'.



`;

exports[`object {...} - parsing failures errors when encountering bad key 6`] = `
module (1:0-1:1)
  rec (1:0-1:1)
    ::error::

error:
test.fnk:1:1
1| {?foo}
    ^

Expected prop-key but found '?'.



`;

exports[`object {...} - parsing failures errors when encountering bad key 7`] = `
module (1:0-1:1)
  rec (1:0-1:1)


error:
test.fnk:1:1
1| {:foo}
    ^

Expected ',' or indented(>=1) new line or '}'.



`;

exports[`object {...} - parsing failures errors when encountering bad key 8`] = `
module (1:0-1:1)
  rec (1:0-1:1)
    ::error::

error:
test.fnk:1:1
1| {{foo}
    ^

Expected prop-key but found '{'.



`;

exports[`object {...} - parsing failures errors when encountering bad key 9`] = `
module (1:0-1:2)
  rec (1:0-1:2)


error:
test.fnk:1:2
1| {}foo}
     ^

Expected ',' or indented new line or end of code.



`;

exports[`object {...} - parsing failures errors when encountering bad key 10`] = `
module (1:0-1:1)
  rec (1:0-1:1)
    ::error::

error:
test.fnk:1:1
1| {[foo}
    ^

Expected prop-key but found '['.



`;

exports[`object {...} - parsing failures errors when encountering bad key 11`] = `
module (1:0-1:1)
  rec (1:0-1:1)
    ::error::

error:
test.fnk:1:1
1| {]foo}
    ^

Expected prop-key but found ']'.



`;

exports[`object {...} - parsing failures errors when encountering bad key 12`] = `
module (1:0-1:1)
  rec (1:0-1:1)
    ::error::

error:
test.fnk:1:1
1| {)foo}
    ^

Expected prop-key but found ')'.



`;

exports[`object {...} - parsing failures errors when encountering bad key 13`] = `
module (1:0-1:6)
  rec (1:0-1:6)
    empty (1:2-1:2)
    rec:kv (1:2-1:5)
      ident (1:2-1:5) foo
      ident (1:2-1:5) foo
`;

exports[`object {...} - parsing failures errors when encountering bad start of prop key 1`] = `
module (1:0-1:5)
  rec (1:0-1:5)
    rec:kv (1:1-1:4)
      ident (1:1-1:4) foo
      ident (1:1-1:4) foo
    ::error::

error:
test.fnk:1:6
1| {foo, [bar]: spam}
         ^

Expected prop-key but found '['.



`;

exports[`object {...} - parsing failures errors when missing \`}\` 1`] = `
module (1:0-1:1)
  rec (1:0-1:1)


error:
test.fnk:1:1
1| {
    ^

Expected ',' or indented(>=1) new line or '}'.



`;

exports[`object {...} parses calculated prop 1`] = `
rec (1:0-1:26)
  rec:kv (1:1-1:4)
    ident (1:1-1:4) foo
    ident (1:1-1:4) foo
  rec:kv (1:6-1:19)
    group (1:6-1:14)
      arithm + (1:7-1:13)
        ident (1:7-1:10) bar
        ident (1:11-1:13) ni
    number (1:16-1:19) 123
  rec:kv (1:21-1:25)
    ident (1:21-1:25) spam
    ident (1:21-1:25) spam
`;

exports[`object {...} parses default assignment prop 1`] = `
rec (1:0-1:9)
  rec:kv (1:1-1:8)
    ident (1:1-1:4) foo
    assign = (1:1-1:8)
      ident (1:1-1:4) foo
      number (1:5-1:8) 123
`;

exports[`object {...} parses empty: {} 1`] = `
rec (1:0-1:2)

`;

exports[`object {...} parses keywords as keys 1`] = `
rec (1:0-1:60)
  rec:kv (1:1-1:3)
    ident (1:1-1:3) fn
    ident (1:1-1:3) fn
  rec:kv (1:5-1:10)
    ident (1:5-1:10) match
    ident (1:5-1:10) match
  rec:kv (1:12-1:16)
    ident (1:12-1:16) fold
    ident (1:12-1:16) fold
  rec:kv (1:18-1:24)
    ident (1:18-1:24) unfold
    ident (1:18-1:24) unfold
  rec:kv (1:26-1:29)
    ident (1:26-1:29) map
    ident (1:26-1:29) map
  rec:kv (1:31-1:35)
    ident (1:31-1:35) find
    ident (1:31-1:35) find
  rec:kv (1:37-1:43)
    ident (1:37-1:43) filter
    ident (1:37-1:43) filter
  rec:kv (1:45-1:50)
    ident (1:45-1:50) await
    ident (1:45-1:50) await
  rec:kv (1:52-1:59)
    ident (1:52-1:59) attempt
    ident (1:52-1:59) attempt
`;

exports[`object {...} parses multiple shorthand exprs 1`] = `
rec (1:0-1:13)
  rec:kv (1:1-1:4)
    ident (1:1-1:4) foo
    ident (1:1-1:4) foo
  rec:kv (1:6-1:9)
    ident (1:6-1:9) bar
    ident (1:6-1:9) bar
  rec:kv (1:11-1:12)
    ident (1:11-1:12) π
    ident (1:11-1:12) π
`;

exports[`object {...} parses multiple shorthand exprs 2`] = `
rec (1:0-1:28)
  rec:kv (1:1-1:4)
    ident (1:1-1:4) foo
    ident (1:1-1:4) foo
  rec:kv (1:6-1:14)
    ident (1:6-1:9) bar
    number (1:11-1:14) 123
  rec:kv (1:16-1:27)
    ident (1:16-1:21) shrub
    string ' (1:23-1:27)
      'ni'
`;

exports[`object {...} parses single prop 1`] = `
rec (1:0-1:11)
  rec:kv (1:1-1:10)
    ident (1:1-1:4) foo
    ident (1:6-1:10) spam
`;

exports[`object {...} parses single shorthand prop 1`] = `
rec (1:0-1:5)
  rec:kv (1:1-1:4)
    ident (1:1-1:4) foo
    ident (1:1-1:4) foo
`;

exports[`object {...} parses single shorthand value 1`] = `
rec (1:0-1:7)
  rec:kv (1:1-1:6)
    string ' (1:1-1:6)
      'foo'
    string ' (1:1-1:6)
      'foo'
`;

exports[`object {...} parses single str prop} 1`] = `
rec (1:0-1:13)
  rec:kv (1:1-1:12)
    string ' (1:1-1:6)
      'foo'
    ident (1:8-1:12) spam
`;

exports[`object {...} parses spread prop 1`] = `
rec (1:0-1:13)
  rec:kv (1:1-1:4)
    ident (1:1-1:4) foo
    ident (1:1-1:4) foo
  rec:kv (1:6-1:12)
    spread ... (1:6-1:12)
      ident (1:9-1:12) bar
    spread ... (1:6-1:12)
      ident (1:9-1:12) bar
`;

exports[`object {...} parses unicode as keys 1`] = `
rec (1:0-1:9)
  rec:kv (1:1-1:2)
    ident (1:1-1:2) π
    ident (1:1-1:2) π
  rec:kv (1:4-1:5)
    ident (1:4-1:5) ƒ
    ident (1:4-1:5) ƒ
  rec:kv (1:7-1:8)
    ident (1:7-1:8) ∑
    ident (1:7-1:8) ∑
`;
