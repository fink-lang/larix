{describe, it, expect, to_match_snapshot, to_throw} = import '@fink/jest'

{parse_expr} = import '../../'


describe:: 'regex rx/.../', fn:

  it:: 'parses empty: rx//', fn:
    expect::
      parse_expr:: `rx//`
      to_match_snapshot


  it:: 'parses multiline', fn:
    expect::
      parse_expr:: `
        rx/
          foo.+bar
        /
      `
      to_match_snapshot


  it:: 'parses flags: rx//gimsuy', fn:
    expect::
      parse_expr:: `rx//gimsuy`
      to_match_snapshot


  it:: 'parses regex: rx/.+foo/', fn:
    expect::
      parse_expr:: `rx/.+foo/gimsuy`
      to_match_snapshot


  it:: 'parses escaped chars: rx/\\n\\t/', fn:
    expect::
      parse_expr:: `rx/\\n \\\\ \\/ \\\\/`
      to_match_snapshot


describe:: 'regex - parsing failures', fn:

  it:: 'throws when missing end', fn:
    expect::
      fn: parse_expr:: `rx/foo.bar`, 'test.fnk'

      to_throw:: `
        test.fnk:1:10
        1| rx/foo.bar
                     ^

        Unexpected end of code.
      `


  it:: 'throws unssupported flags', fn:
    expect::
      fn: parse_expr:: `rx/foo.bar/n`, 'test.fnk'

      to_throw:: `
        test.fnk:1:11
        1| rx/foo.bar/n
                      ^

        Cannot use 'n' as an infix operator.
      `
