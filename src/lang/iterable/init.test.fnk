{describe, it, expect, to_match_snapshot} = import '@fink/jest/test.fnk'

{parse_expr} = import '../../parser.fnk'


describe 'fold item, accu: ...', fn:

  it 'parses', fn:
    expect
      parse_expr '
        fold item, accu=0:
          item + accu
          # trailing comment
      '
      to_match_snapshot


describe 'unfold accu: ...', fn:

  it 'parses', fn:
    expect
      parse_expr '
        unfold curr=start:
          start + accu
      '
      to_match_snapshot

  it 'parses with item, accu result', fn:
    expect
      parse_expr '
        unfold prev=0:
          (prev * 2, prev + 1)
      '
      to_match_snapshot

  it 'parses no args', fn:
    expect
      parse_expr '
        unfold:
          foo
          # trailing comment
      '
      to_match_snapshot


describe 'map item: ...', fn:

  it 'parses', fn:
    expect
      parse_expr '
        map item:
          item * 2
          # trailing comment
      '
      to_match_snapshot


describe 'filter item: ...', fn:

  it 'parses', fn:
    expect
      parse_expr '
        filter item:
          item % 2 == 0
          # trailing comment
      '
      to_match_snapshot


describe 'while item: ...', fn:

  it 'parses', fn:
    expect
      parse_expr '
        while item:
          item % 2 == 0
          # trailing comment
      '
      to_match_snapshot


describe 'until item: ...', fn:

  it 'parses', fn:
    expect
      parse_expr '
        until item:
          item % 2 == 0
      '
      to_match_snapshot


describe 'find item: ...', fn:

  it 'parses', fn:
    expect
      parse_expr '
        find item:
          item % 2 == 0
          # trailing comment
      '
      to_match_snapshot

