{describe, it, expect, to_match_snapshot} = import '@fink/jest/test.fnk'

{parse, parse_expr} = import '../../parser.fnk'


describe 'fold item, accu: ...', fn:

  it 'parses', fn:
    expect
      parse_expr '
        fold item, accu=0:
          item + accu
          # trailing comment
      '
      to_match_snapshot


describe 'unfold accu: ...', fn:

  it 'parses', fn:
    expect
      parse_expr '
        unfold curr=start:
          start + accu
      '
      to_match_snapshot

  it 'parses with item, accu result', fn:
    expect
      parse_expr '
        unfold prev, acc=0:
          [acc + prev * 2, prev + 1]
      '
      to_match_snapshot

  it 'parses no args', fn:
    expect
      parse_expr '
        unfold:
          foo
          # trailing comment
      '
      to_match_snapshot


describe 'map item: ...', fn:

  it 'parses', fn:
    expect
      parse_expr '
        map item:
          item * 2
          # trailing comment
      '
      to_match_snapshot


describe 'filter item: ...', fn:

  it 'parses', fn:
    expect
      parse_expr '
        filter item:
          item % 2 == 0
          # trailing comment
      '
      to_match_snapshot


describe 'while item: ...', fn:

  it 'parses', fn:
    expect
      parse_expr '
        while item:
          item % 2 == 0
          # trailing comment
      '
      to_match_snapshot


describe 'until item: ...', fn:

  it 'parses', fn:
    expect
      parse_expr '
        until item:
          item % 2 == 0
      '
      to_match_snapshot



describe 'fn-blocks', fn:
  it 'parses imports', fn:
    expect
      parse '
        {fold, unfold, map, filter, while, until} = import "@fink/std-lib/iter.fnk"
      '
      to_match_snapshot

  it 'parses map', fn:
    expect
      parse '
        map = fn: false
        map fn item:
          item * 2
      '
      to_match_snapshot

  it 'parses filter', fn:
    expect
      parse '
        filter = fn: false
        filter fn item:
          item > 2
      '
      to_match_snapshot

  it 'parses unfold', fn:
    expect
      parse '
        unfold = fn: false
        unfold fn item:
          item
      '
      to_match_snapshot

  it 'parses fold', fn:
    expect
      parse '
        fold = fn: false
        fold fn item:
          item
      '
      to_match_snapshot

  it 'parses while', fn:
    expect
      parse '
        while = fn: false
        while fn item:
          item
      '
      to_match_snapshot

  it 'parses until', fn:
    expect
      parse '
        until = fn: false
        until fn item:
          item
      '
      to_match_snapshot
