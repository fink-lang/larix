{describe, it, eq, snapshot} = import '../../testing/jest'

{parse_expr} = import '../../'


describe:: 'fold item, accu: ...', fn:

  it:: 'parses', fn:
    parse_expr(`
      fold item, accu=0:
        item + accu
        # trailing comment
    `) eq snapshot


describe:: 'unfold accu: ...', fn:

  it:: 'parses', fn:
    parse_expr(`
      unfold curr=start:
        start + accu
    `) eq snapshot

  it:: 'parses with item, accu result', fn:
    parse_expr(`
      unfold prev=0:
        (prev * 2, prev + 1)
    `) eq snapshot

  it:: 'parses no args', fn:
    parse_expr(`
      unfold:
        foo
        # trailing comment
    `) eq snapshot


describe:: 'map item: ...', fn:

  it:: 'parses', fn:
    parse_expr(`
      map item:
        item * 2
        # trailing comment
    `) eq snapshot


describe:: 'flat_map item: ...', fn:

  it:: 'parses', fn:
    parse_expr(`
      flat_map item:
        [item, item * 2]
    `) eq snapshot


describe:: 'filter item: ...', fn:

  it:: 'parses', fn:
    parse_expr(`
      filter item:
        item % 2 == 0
        # trailing comment
    `) eq snapshot


describe:: 'while item: ...', fn:

  it:: 'parses', fn:
    parse_expr(`
      while item:
        item % 2 == 0
        # trailing comment
    `) eq snapshot


describe:: 'find item: ...', fn:

  it:: 'parses', fn:
    parse_expr(`
      find item:
        item % 2 == 0
        # trailing comment
    `) eq snapshot

