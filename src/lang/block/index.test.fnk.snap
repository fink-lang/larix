// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`expression block ignores trailing comma before newline 1`] = `
module (1:0-3:0)
  number (1:0-1:1) 1
  number (2:0-2:1) 2
`;

exports[`expression block parses empty 1`] = `
module (1:0-1:0)

`;

exports[`expression block parses multiple 1`] = `
module (1:0-4:0)
  number (1:0-1:1) 1
  number (2:0-2:1) 2
  number (3:0-3:1) 3
`;

exports[`expression block parses single expr 1`] = `
module (1:0-1:1)
  number (1:0-1:1) 1
`;

exports[`expression block parses with empty expressions 1`] = `
module (1:0-4:0)
  empty (1:1-1:1)
  number (2:0-2:1) 2
  empty (3:1-3:1)
`;

exports[`expression block parses with leading empty expressions 1`] = `
module (1:0-4:0)
  number (1:0-1:1) 1
  empty (2:1-2:1)
  empty (2:2-2:2)
  number (2:2-2:3) 2
  number (3:0-3:1) 3
`;

exports[`expression block parses with trailing empty expressions 1`] = `
module (1:0-4:0)
  number (1:0-1:1) 1
  number (2:0-2:1) 2
  empty (2:2-2:2)
  number (3:0-3:1) 3
  empty (3:2-3:2)
`;

exports[`nesting parses indentation 1`] = `
module (1:0-4:0)
  assign = (1:0-2:7)
    ident (1:0-1:3) foo
    block fn (1:6-2:7)

      :
      block fn (1:10-2:7)

        :
        block fn (1:14-2:7)

          :
          arithm + (2:2-2:7)
            ident (2:2-2:3) a
            ident (2:6-2:7) b
  ident (3:0-3:4) spam
`;

exports[`nesting parses indentation 2`] = `
module (1:0-6:0)
  assign = (1:0-4:7)
    ident (1:0-1:3) foo
    block fn (1:6-4:7)

      :
      assign = (2:2-3:9)
        ident (2:2-2:7) shrub
        block fn (2:10-3:9)

          :
          block fn (2:14-3:9)

            :
            arithm + (3:4-3:9)
              ident (3:4-3:5) a
              ident (3:8-3:9) b
      ident (4:2-4:7) shrub
  ident (5:0-5:4) spam
`;

exports[`nesting parses indentation 3`] = `
module (1:0-6:0)
  assign = (1:0-4:7)
    ident (1:0-1:3) foo
    block fn (1:6-4:7)

      :
      assign = (2:2-3:13)
        ident (2:2-2:7) shrub
        block fn (2:10-3:13)

          :
          block fn (3:4-3:13)

            :
            arithm + (3:8-3:13)
              ident (3:8-3:9) a
              ident (3:12-3:13) b
      ident (4:2-4:7) shrub
  ident (5:0-5:4) spam
`;

exports[`nesting parses nested 1`] = `
module (1:0-17:1)
  group (1:0-17:1)
    ident (2:2-2:5) foo
    group (4:2-4:22)
      ident (4:3-4:6) foo
      call (4:8-4:21)
        ident (4:8-4:11) foo
        ident (4:12-4:15) bar
        ident (4:17-4:21) spam
    # leading group comment
    group (7:2-10:3)
      ident (8:4-8:7) bar
      ident (9:4-9:8) spam
    # leading comment
    # for next line
    ident (14:2-14:6) spam
      # trailing same line comment
    # trailing block comment
`;

exports[`parse failures errors due to end of indentation 1`] = `
module (1:0-3:6)
  assign = (1:0-3:6)
    ident (1:0-1:3) foo
    group (1:6-3:6)
      ident (2:2-2:5) bar
      ident (3:2-3:6) spam

error:
test.fnk:4:0
1| foo = (
2|   bar
3|   spam
4| shrub
   ^

Expected ',' or indented new line or ')'.



`;

exports[`parse failures errors due to end of indentation 2`] = `
module (1:0-2:9)
  assign = (1:0-2:9)
    ident (1:0-1:3) foo
    group (1:6-2:9)
      assign = (2:2-2:9)
        ident (2:2-2:5) bar
        group (2:8-2:9)


error:
test.fnk:3:0
1| foo = (
2|   bar = (
3| spam
   ^

Expected ',' or indented new line or ')'.



`;

exports[`parse failures errors due to missing closing symbol 1`] = `
module (1:0-1:4)
  group (1:0-1:4)
    number (1:1-1:2) 1
    number (1:3-1:4) 2

error:
test.fnk:1:4
1| (1,2
       ^

Expected ',' or indented new line or ')'.



`;

exports[`single line expressions parses leading empty 1`] = `
module (1:0-1:5)
  empty (1:1-1:1)
  number (1:1-1:2) 1
  number (1:4-1:5) 2
`;

exports[`single line expressions parses leading empty 2`] = `
module (1:0-1:6)
  empty (1:1-1:1)
  empty (1:2-1:2)
  number (1:2-1:3) 1
  number (1:5-1:6) 2
`;

exports[`single line expressions parses multiple 1`] = `
module (1:0-1:4)
  number (1:0-1:1) 1
  number (1:3-1:4) 2
`;

exports[`single line expressions parses trailing empty 1`] = `
module (1:0-1:2)
  number (1:0-1:1) 1
  empty (1:2-1:2)
`;

exports[`single line expressions parses trailing empty 2`] = `
module (1:0-1:3)
  number (1:0-1:1) 2
  empty (1:2-1:2)
  empty (1:3-1:3)
`;
