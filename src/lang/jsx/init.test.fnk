{describe, it, expect, to_match_snapshot} = import '@fink/jest/test.fnk'

{parse_expr, parse} = import '../../parser.fnk'


describe 'JSX', fn:

  it 'parses self closing elem: <Foobar />', fn:
    expect
      parse_expr '<Foobar />'
      to_match_snapshot


  it 'parses self closing elem with short attr: <Foobar spam />', fn:
    expect
      parse_expr '<Foobar spam />'
      to_match_snapshot


  it 'parses self closing elem with str attr: <Foobar spam="ni" />', fn:
    expect
      parse_expr '<Foobar spam="ni" />'
      to_match_snapshot


  it 'parses self closing elem with str attr: <Foobar spam=\'ni\' />', fn:
    expect
      parse_expr '<Foobar spam="ni" />'
      to_match_snapshot


  it 'parses self closing elem with expr attr: <Foobar spam={ni} />', fn:
    expect
      parse_expr '<Foobar spam={ni} />'
      to_match_snapshot


  it 'parses empty elem: <Foobar></Foobar>', fn:
    expect
      parse_expr '<Foobar></Foobar>'
      to_match_snapshot


  it 'parses elem with children: <Foobar><Spam /></Foobar>', fn:
    expect
      parse_expr '
        <Foobar ni>
          <Spam />
        </Foobar>
      '
      to_match_snapshot


  it 'parses elem with expr in body: <Foobar> {...} </Foobar>', fn:
    expect
      parse_expr '
        <Foobar>
          {1 + 2}
        </Foobar>
      '
      to_match_snapshot


  it 'parses fragment', fn:
    expect
      parse_expr '
        <>
          {1 + 2}
        </>
      '
      to_match_snapshot

    expect
      parse_expr '
        <></>
      '
      to_match_snapshot



describe 'JSX parse failures', fn:
  it 'errors with invalid attr value', fn:
    expect
      parse '<Foobar spam=123 />', 'test.fnk'
      to_match_snapshot
