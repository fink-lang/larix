{skip, describe, it, expect, to_match_snapshot} = import '@fink/jest/test.fnk'

{parse_expr} = import '../../parser.fnk'



describe 'JSX', fn:

  it 'parses self closing elem: <Foobar />', fn:
    expect
      parse_expr '<Foobar />'
      to_match_snapshot


  it 'parses self closing elem with short attr: <Foobar spam />', fn:
    expect
      parse_expr '<Foobar spam />'
      to_match_snapshot


  it 'parses self closing elem with str attr: <Foobar spam="ni" />', fn:
    expect
      parse_expr '<Foobar spam="ni" />'
      to_match_snapshot


  it "parses self closing elem with str attr: <Foobar spam='ni' />", fn:
    expect
      parse_expr "<Foobar spam='ni' />"
      to_match_snapshot


  it 'parses self closing elem with expr attr: <Foobar spam={ni} />', fn:
    expect
      parse_expr '<Foobar spam={ni} />'
      to_match_snapshot


  it 'parses empty elem: <Foobar></Foobar>', fn:
    expect
      parse_expr '<Foobar></Foobar>'
      to_match_snapshot


  it 'parses elem with children: <Foobar><Spam /></Foobar>', fn:
    expect
      parse_expr '
        <Foobar ni>
          <Spam />
        </Foobar>
      '
      to_match_snapshot


  it 'parses elem with expr in body: <Foobar> {...} </Foobar>', fn:
    expect
      parse_expr '
        <Foobar>
          {1 + 2}
        </Foobar>
      '
      to_match_snapshot


  it 'parses fragment', fn:
    expect
      parse_expr '
        <>
          {1 + 2}
        </>
      '
      to_match_snapshot

    expect
      parse_expr '<></>'
      to_match_snapshot

    expect
      parse_expr '
        <div>
          <></>
        </div>
      '
      to_match_snapshot



describe 'JSX extensions',  fn:
  it 'parses spread', fn:
    expect
      parse_expr '<Foobar spam ...ham shrub />'
      to_match_snapshot


  it "parses template str attr", fn:
    expect
      parse_expr "<Foobar spam='ni: \${1 + 2}' />"
      to_match_snapshot


  it "parses fink expr as attr values", fn:
    expect
      parse_expr "<Foobar spam=ham shrub=1234 ni=-123> foo </Foobar>"
      to_match_snapshot


  skip.it "parses fink expr with gt comparison", fn:
    expect
      parse_expr "<Foobar spam=(foo > 123) shrub=1234> ni </Foobar>"
      to_match_snapshot


  it "parses expr group with call for attr value", fn:
    expect
      parse_expr "<Foobar spam=(ham ni) shrub=1234 />"
      to_match_snapshot



describe 'JSX errors',  fn:
  it 'errors on missing closign tag or children', fn:
    expect
      parse_expr '<Foobar>'
      to_match_snapshot


  it 'errors on missing closing fragment tag', fn:
    expect
      parse_expr '<> '
      to_match_snapshot


  it 'errors on missing end of tag', fn:
    expect
      parse_expr '<Foobar '
      to_match_snapshot

