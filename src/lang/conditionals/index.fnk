{assert_advance} = import '@fink/prattler'

{add_named_block, indented_block} = import '../block'
{single_expression} = import '../block/expr'


get_condition = fn ctx:
  [left, next_ctx] = single_expression:: ctx, 0
  match left:
    {type: 'comment'}:
      [left, next_ctx]
    else:
      [left, assert_advance:: next_ctx, ':']


get_result = fn ctx:
  [{exprs, comments, loc}, next_ctx] = indented_block:: ctx
  [{type: 'block', exprs, comments, loc}, next_ctx]


cond_result_expr = fn ctx:
  [left, result_ctx] = get_condition:: ctx

  match left:
    {type: 'comment'}:
      [left, result_ctx]
    else:
      [right, next_ctx] = get_result:: result_ctx
      {start} = left.loc
      {end} = right.loc
      [{type: 'cond:expr', left, right, loc: {start, end}}, next_ctx]


add_conditionals = fn ctx:
  pipe ctx:
    # TODO: 'block', 'match'
    add_named_block:: 'match', 'cond', cond_result_expr
    # TODO: 'block', 'attempt'
    add_named_block:: 'attempt', 'attempt'
